# Generated by Django 5.0 on 2024-02-16 17:09

import django.db.models.deletion
import django.utils.timezone
import djgeojson.fields
import filer.fields.image
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.FILER_IMAGE_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Activity",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("full", models.CharField(max_length=50, verbose_name="Name")),
                (
                    "full_it",
                    models.CharField(max_length=50, null=True, verbose_name="Name"),
                ),
                (
                    "full_de",
                    models.CharField(max_length=50, null=True, verbose_name="Name"),
                ),
                (
                    "position",
                    models.PositiveSmallIntegerField(
                        null=True, verbose_name="Position"
                    ),
                ),
            ],
            options={
                "verbose_name": "Activity",
                "verbose_name_plural": "Activities",
                "ordering": ("position",),
            },
        ),
        migrations.CreateModel(
            name="Client",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, verbose_name="Name")),
                (
                    "name_it",
                    models.CharField(max_length=50, null=True, verbose_name="Name"),
                ),
                (
                    "name_de",
                    models.CharField(max_length=50, null=True, verbose_name="Name"),
                ),
            ],
            options={
                "verbose_name": "Client",
                "verbose_name_plural": "Clients",
            },
        ),
        migrations.CreateModel(
            name="Intervention",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, verbose_name="Name")),
                (
                    "name_it",
                    models.CharField(max_length=50, null=True, verbose_name="Name"),
                ),
                (
                    "name_de",
                    models.CharField(max_length=50, null=True, verbose_name="Name"),
                ),
                (
                    "position",
                    models.PositiveSmallIntegerField(
                        null=True, verbose_name="Position"
                    ),
                ),
            ],
            options={
                "verbose_name": "Intervention",
                "verbose_name_plural": "Interventions",
                "ordering": ("position",),
            },
        ),
        migrations.CreateModel(
            name="Project",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        blank=True,
                        help_text="Appears on the address bar.\n            Automatically generated for the active language\n            ",  # noqa E501
                        max_length=100,
                        null=True,
                        verbose_name="Slug",
                    ),
                ),
                (
                    "slug_it",
                    models.SlugField(
                        blank=True,
                        help_text="Appears on the address bar.\n            Automatically generated for the active language\n            ",  # noqa E501
                        max_length=100,
                        null=True,
                        verbose_name="Slug",
                    ),
                ),
                (
                    "slug_de",
                    models.SlugField(
                        blank=True,
                        help_text="Appears on the address bar.\n            Automatically generated for the active language\n            ",  # noqa E501
                        max_length=100,
                        null=True,
                        verbose_name="Slug",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="Title of the project",
                        max_length=50,
                        null=True,
                        verbose_name="Title",
                    ),
                ),
                (
                    "title_it",
                    models.CharField(
                        help_text="Title of the project",
                        max_length=50,
                        null=True,
                        verbose_name="Title",
                    ),
                ),
                (
                    "title_de",
                    models.CharField(
                        help_text="Title of the project",
                        max_length=50,
                        null=True,
                        verbose_name="Title",
                    ),
                ),
                (
                    "intro",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Introduction",
                    ),
                ),
                (
                    "intro_it",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Introduction",
                    ),
                ),
                (
                    "intro_de",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Introduction",
                    ),
                ),
                ("body", models.TextField(blank=True, null=True, verbose_name="Text")),
                (
                    "body_it",
                    models.TextField(blank=True, null=True, verbose_name="Text"),
                ),
                (
                    "body_de",
                    models.TextField(blank=True, null=True, verbose_name="Text"),
                ),
                (
                    "date",
                    models.DateField(
                        default=django.utils.timezone.now, verbose_name="Start date"
                    ),
                ),
                (
                    "date_end",
                    models.DateField(blank=True, null=True, verbose_name="End date"),
                ),
                (
                    "site",
                    models.CharField(
                        blank=True,
                        help_text="Loose location",
                        max_length=100,
                        null=True,
                        verbose_name="Site",
                    ),
                ),
                (
                    "site_it",
                    models.CharField(
                        blank=True,
                        help_text="Loose location",
                        max_length=100,
                        null=True,
                        verbose_name="Site",
                    ),
                ),
                (
                    "site_de",
                    models.CharField(
                        blank=True,
                        help_text="Loose location",
                        max_length=100,
                        null=True,
                        verbose_name="Site",
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("ALT", "Other category"),
                            ("RES", "Residential"),
                            ("TER", "Offices"),
                            ("SAN", "Healthcare"),
                            ("PRO", "Production"),
                            ("SCO", "Instruction"),
                            ("ACC", "Accommodation"),
                        ],
                        default="ALT",
                        max_length=4,
                        verbose_name="Functional category",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ALT", "Status unknown"),
                            ("PRO", "Designed"),
                            ("COR", "Under construction"),
                            ("REA", "Done"),
                        ],
                        default="ALT",
                        max_length=4,
                        verbose_name="Status of intervention",
                    ),
                ),
                (
                    "cost",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        max_digits=11,
                        verbose_name="Cost of intervention",
                    ),
                ),
                (
                    "activity",
                    models.ManyToManyField(
                        blank=True,
                        to="portfolio.activity",
                        verbose_name="Performed activities",
                    ),
                ),
                (
                    "client",
                    models.ManyToManyField(
                        blank=True, to="portfolio.client", verbose_name="Client"
                    ),
                ),
                (
                    "type",
                    models.ManyToManyField(
                        blank=True,
                        to="portfolio.intervention",
                        verbose_name="Type of intervention",
                    ),
                ),
            ],
            options={
                "verbose_name": "Project",
                "verbose_name_plural": "Projects",
                "ordering": ("-date",),
            },
        ),
        migrations.CreateModel(
            name="ProjectMap",
            fields=[
                (
                    "prog",
                    models.OneToOneField(
                        editable=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to="portfolio.project",
                    ),
                ),
                (
                    "geom",
                    djgeojson.fields.PointField(null=True, verbose_name="Location"),
                ),
            ],
            options={
                "verbose_name": "Map",
                "verbose_name_plural": "Maps",
            },
        ),
        migrations.CreateModel(
            name="ProjectCarousel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        help_text="Will be used in captions",
                        max_length=100,
                        null=True,
                        verbose_name="Description",
                    ),
                ),
                (
                    "description_it",
                    models.CharField(
                        blank=True,
                        help_text="Will be used in captions",
                        max_length=100,
                        null=True,
                        verbose_name="Description",
                    ),
                ),
                (
                    "description_de",
                    models.CharField(
                        blank=True,
                        help_text="Will be used in captions",
                        max_length=100,
                        null=True,
                        verbose_name="Description",
                    ),
                ),
                (
                    "position",
                    models.PositiveSmallIntegerField(
                        null=True, verbose_name="Position"
                    ),
                ),
                (
                    "fb_image",
                    filer.fields.image.FilerImageField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="carousel_image",
                        to=settings.FILER_IMAGE_MODEL,
                    ),
                ),
                (
                    "home",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="project_carousel",
                        to="portfolio.project",
                        verbose_name="Project",
                    ),
                ),
            ],
            options={
                "verbose_name": "Project carousel",
                "verbose_name_plural": "Project carousels",
                "ordering": ["position"],
            },
        ),
    ]
